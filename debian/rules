#!/usr/bin/make -f

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

include /usr/share/dpkg/pkg-info.mk
include /usr/share/dpkg/architecture.mk

# Last supported glibc version (for flatpaks)
GLIBC_LAST_SUPPORTED_VERSION = 2.33

# Package names
PKG_driver      := libhybris

export DEB_HOST_MULTIARCH=$(shell dpkg-architecture -qDEB_HOST_MULTIARCH)

export VULKAN_VERSION="1.2.183"

# Strong needs at least gcc 4.9
export DEB_BUILD_MAINT_OPTIONS=hardening=-stackprotectorstrong

ifneq ($(DEB_HOST_GNU_TYPE),$(DEB_BUILD_GNU_TYPE))
	CC :=$(DEB_HOST_GNU_TYPE)-$(CC)
	CXX :=$(DEB_HOST_GNU_TYPE)-$(CXX)
endif

# Priority of the alternatives
alt_priority    := 400

# Directory naming schemes
PKG_dirname             := $(PKG_driver)-egl
bindir                  := usr/bin
datadir                 := usr/share
libdir                  := usr/lib/$(DEB_HOST_MULTIARCH)
includedir              := usr/include
sysconfdir              := etc
PKG_libdir              := $(libdir)/$(PKG_dirname)
PKG_configdir           := $(PKG_libdir)
ld_so_conf_dir          := $(PKG_configdir)
ld_so_conf_file         := ld.so.conf
alt_ld_so_conf_file     := alt_ld.so.conf
ld_so_conf_path         := $(ld_so_conf_dir)/$(ld_so_conf_file)
alt_ld_so_conf_path     := $(ld_so_conf_dir)/$(alt_ld_so_conf_file)

ANDROID_HEADERS_PATH = /usr/include/android
DEFAULT_CONFIGURATION = \
	--enable-wayland \
	--with-android-headers=$(ANDROID_HEADERS_PATH) \
	--enable-property-cache \
	--enable-experimental \
	--enable-glvnd \
	--enable-clicd
ARCH_CONFIGURATION =

ifeq ($(DEB_HOST_ARCH),$(findstring $(DEB_HOST_ARCH), armhf))
FLATPAK_ARCH = arm
FLATPAK_LIBDIR = lib
ARCH_CONFIGURATION = \
	--enable-arch=arm \
	--enable-mali-quirks \
	--enable-adreno-quirks
endif
ifeq ($(DEB_HOST_ARCH),$(findstring $(DEB_HOST_ARCH), arm64))
FLATPAK_ARCH = aarch64
FLATPAK_LIBDIR = lib64
ARCH_CONFIGURATION = \
	--enable-arch=arm64 \
	--enable-mali-quirks \
	--enable-adreno-quirks
endif
ifeq ($(DEB_HOST_ARCH),$(findstring $(DEB_HOST_ARCH), i386))
FLATPAK_ARCH = x86
FLATPAK_LIBDIR = lib
ARCH_CONFIGURATION = \
	--enable-arch=x86
endif
ifeq ($(DEB_HOST_ARCH),$(findstring $(DEB_HOST_ARCH), amd64))
FLATPAK_ARCH = x86_64
FLATPAK_LIBDIR = lib64
ARCH_CONFIGURATION = \
	--enable-arch=x86-64
endif

FLATPAK_EXTENSION_TARGET = var/lib/flatpak/extension/org.freedesktop.Platform.GL.hybris/$(FLATPAK_ARCH)/1.4

override_dh_auto_configure:
	dh_auto_configure --sourcedirectory=hybris -- \
		$(DEFAULT_CONFIGURATION) \
		$(ARCH_CONFIGURATION)

override_dh_install:
	dh_install -O--sourcedirectory=hybris

	# Create the flatpak extension
	mkdir -p $(CURDIR)/debian/flatpak-extension-gl-hybris/$(FLATPAK_EXTENSION_TARGET)/$(FLATPAK_LIBDIR)
	for pkg in $(PKG_driver) libhybris-common1 libhardware2; do \
		cp -Ra $(CURDIR)/debian/$$pkg/$(libdir)/* $(CURDIR)/debian/flatpak-extension-gl-hybris/$(FLATPAK_EXTENSION_TARGET)/$(FLATPAK_LIBDIR); \
	done
	cp -Ra $(CURDIR)/debian/$(PKG_driver)/$(datadir)/glvnd $(CURDIR)/debian/flatpak-extension-gl-hybris/$(FLATPAK_EXTENSION_TARGET)
	cp -Ra $(CURDIR)/debian/$(PKG_driver)/$(sysconfdir)/OpenCL $(CURDIR)/debian/flatpak-extension-gl-hybris/$(FLATPAK_EXTENSION_TARGET)

	# Strip recent glibc symbols on the flatpak extension
	find $(CURDIR)/debian/flatpak-extension-gl-hybris/$(FLATPAK_EXTENSION_TARGET)/$(FLATPAK_LIBDIR) -type f -name \*.so\* -exec glibc-downgrade $(GLIBC_LAST_SUPPORTED_VERSION) \{\} \;

	# libvulkan.so is a symlink provided by libvulkan-dev which points to libvulkan.so.1.* (which we also provide)
	# by getting rid of it from this package we can avoid a dumb conflict with libvulkan-dev and not do a diversion
	rm -f $(CURDIR)/debian/libhybris-vulkan/$(libdir)/libvulkan.la $(CURDIR)/debian/libhybris-vulkan/$(libdir)/libvulkan.so $(CURDIR)/debian/libhybris-vulkan/$(libdir)/libvulkan.so.1

	ln -s libvulkan.so.$(VULKAN_VERSION) $(CURDIR)/debian/libhybris-vulkan/$(libdir)/libvulkan-hybris.so

override_dh_shlibdeps:
	dh_shlibdeps -l"$(CURDIR)/debian/$(PKG_driver)/$(PKG_libdir)"

%:
	dh $@ --with autoreconf --sourcedirectory=hybris
